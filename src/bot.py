import os
import re
from dotenv import load_dotenv
from slack_bolt import App
from slack_bolt.adapter.socket_mode import SocketModeHandler

# ‡πÇ‡∏´‡∏•‡∏î environment variables
load_dotenv()

# ‡∏™‡∏£‡πâ‡∏≤‡∏á Slack App
app = App(token=os.environ.get("SLACK_BOT_TOKEN"))

# =============== Message Handlers ===============

# ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå "hello" ‡∏´‡∏£‡∏∑‡∏≠ "hi"
@app.message(re.compile(r"(hello|hi|‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ)", re.IGNORECASE))
def message_hello(message, say):
    user = message['user']
    say(f"‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì <@{user}>! üëã ‡∏ú‡∏°‡∏Ñ‡∏∑‡∏≠ BL1NK Bot ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏•‡πâ‡∏ß")

# ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå "help"
@app.message(re.compile(r"help", re.IGNORECASE))
def message_help(say):
    help_text = """
ü§ñ *BL1NK Bot - ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ:*

‚Ä¢ `hello` ‡∏´‡∏£‡∏∑‡∏≠ `hi` - ‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢
‚Ä¢ `help` - ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
‚Ä¢ `ping` - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á
‚Ä¢ `@BL1NK Bot` - ‡πÄ‡∏°‡∏ô‡∏ä‡∏±‡πà‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏∏‡∏¢‡∏î‡πâ‡∏ß‡∏¢
‚Ä¢ `info` - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• bot

*‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏¥‡πÄ‡∏®‡∏©:*
‚úÖ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö DM (‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡πÑ‡∏î‡πâ)
‚úÖ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÉ‡∏ô channel ‡∏ó‡∏±‡πâ‡∏á public ‡πÅ‡∏•‡∏∞ private
‚úÖ ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÅ‡∏ö‡∏ö real-time ‡∏î‡πâ‡∏ß‡∏¢ Socket Mode
    """
    say(help_text)

# ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå "ping"
@app.message(re.compile(r"ping", re.IGNORECASE))
def message_ping(say):
    say("üèì Pong! Bot ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥‡∏Ñ‡∏£‡∏±‡∏ö")

# ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå "info"
@app.message(re.compile(r"info", re.IGNORECASE))
def message_info(say):
    info_text = """
‚ÑπÔ∏è *BL1NK Bot Information*

üì¶ *Framework:* Slack Bolt for Python
üîå *Mode:* Socket Mode (Real-time)
üèóÔ∏è *Project:* bl1nk-slack-mcp-server
üíª *Running on:* Termux (Android)

‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏î‡∏¢: BL1NK Team
    """
    say(info_text)

# =============== Event Handlers ===============

# ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡πÄ‡∏°‡∏ô‡∏ä‡∏±‡πà‡∏ô bot
@app.event("app_mention")
def handle_app_mention(event, say):
    user = event['user']
    text = event.get('text', '')
    
    # ‡∏•‡∏ö mention ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
    clean_text = re.sub(r'<@[A-Z0-9]+>', '', text).strip()
    
    if not clean_text:
        say(f"‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö <@{user}>! ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ú‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÑ‡∏´‡∏°‡∏Ñ‡∏£‡∏±‡∏ö? ‡∏û‡∏¥‡∏°‡∏û‡πå `help` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
    else:
        say(f"‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å <@{user}> ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö: _{clean_text}_\n\n‡∏ú‡∏°‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô! ü§ñ")

# =============== Reaction Handler ===============

# ‡πÄ‡∏û‡∏¥‡πà‡∏° reaction ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡∏û‡∏π‡∏î‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ "good" ‡∏´‡∏£‡∏∑‡∏≠ "great"
@app.message(re.compile(r"(good|great|‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°|‡∏î‡∏µ)", re.IGNORECASE))
def add_reaction(message, client):
    try:
        client.reactions_add(
            channel=message['channel'],
            timestamp=message['ts'],
            name='tada'
        )
    except Exception as e:
        print(f"Error adding reaction: {e}")

# =============== Error Handler ===============

@app.error
def custom_error_handler(error, body, logger):
    logger.exception(f"Error: {error}")
    logger.info(f"Request body: {body}")

# =============== Start Bot ===============

if __name__ == "__main__":
    print("‚ö°Ô∏è BL1NK Slack Bot ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô (Socket Mode)...")
    print("üì° ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å Slack ‡πÅ‡∏•‡πâ‡∏ß!")
    print("=" * 50)
    
    # ‡πÉ‡∏ä‡πâ Socket Mode
    handler = SocketModeHandler(app, os.environ["SLACK_APP_TOKEN"])
    handler.start()
